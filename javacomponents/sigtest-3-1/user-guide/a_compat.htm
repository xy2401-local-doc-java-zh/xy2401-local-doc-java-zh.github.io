<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>API Migration Compatibility Rules (Signature Test)</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="dcterms.created" content="2014-07-01T13:22:31Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="SigTest User's Guide" />
<meta name="dcterms.identifier" content="E19036-03" />
<meta name="dcterms.isVersionOf" content="SIGTS" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="a_api_examples.htm" title="Previous" type="text/html" />
<link rel="Next" href="a_merge.htm" title="Next" type="text/html" />
<link rel="alternate" href="SIGTS.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">21/25</span> <!-- End Header --><a id="Z4000c521043455"></a>
<h1 class="appendix"><span class="secnum">C</span> API Migration Compatibility Rules (Signature Test)</h1>
<p>This appendix describes the rules used by the Signature Test tool API migration feature.</p>
<a id="Z40000ca1045175"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">C.1</span> The Compatibility Rules</h2>
<p>The following sections and tables describe the rules and show whether they break only source compatibility or both source and binary compatibility. Comments and clarifications follow the table for rules that have an asterisk after their number.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>A class is called <span class="italic">subclassable</span> if it has subclasses outside its package. In other words, this class is not final and has public constructor</p>
</div>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref26"></a>
<h3 class="sect2"><span class="secnum">C.1.1</span> General Rules</h3>
<p>The rules from this group are triggered if the more specific rules from the other groups below are not triggered. For example, adding an interface method defined in rule 2.1, adding constructor in the rule 5.5. In such cases more general rule 1.1 is ignored.</p>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref27"></a><a id="Z4000c521041161"></a>Table C-1 API Migration Compatibility Rules - General</p>
<table class="cellalignment36" title="API Migration Compatibility Rules - General" summary="Add Summary attribute value here." dir="ltr">
<thead>
<tr class="cellalignment25">
<th class="cellalignment37" id="r1c1-t3">Rule #</th>
<th class="cellalignment37" id="r1c2-t3">Description</th>
<th class="cellalignment37" id="r1c3-t3">Breaks</th>
<th class="cellalignment37" id="r1c4-t3">Severity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment25">
<td class="cellalignment31" id="r2c1-t3" headers="r1c1-t3">
<p>1.1 *</p>
</td>
<td class="cellalignment31" headers="r2c1-t3 r1c2-t3">
<p>API (public or protected) type (class, interface, enum, annotation type) or member (method, field) added</p>
</td>
<td class="cellalignment31" headers="r2c1-t3 r1c3-t3">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r2c1-t3 r1c4-t3">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r3c1-t3" headers="r1c1-t3">
<p>1.2</p>
</td>
<td class="cellalignment31" headers="r3c1-t3 r1c2-t3">
<p>API (public or protected) type (class, interface, enum, annotation type) or member (method, field) removed</p>
</td>
<td class="cellalignment31" headers="r3c1-t3 r1c3-t3">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r3c1-t3 r1c4-t3">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r4c1-t3" headers="r1c1-t3">
<p>1.3</p>
</td>
<td class="cellalignment31" headers="r4c1-t3 r1c2-t3">
<p>Narrowing type or member visibility - from public to non-public, from protected to package or private</p>
</td>
<td class="cellalignment31" headers="r4c1-t3 r1c3-t3">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r4c1-t3 r1c4-t3">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r5c1-t3" headers="r1c1-t3">
<p>1.4 *</p>
</td>
<td class="cellalignment31" headers="r5c1-t3 r1c2-t3">
<p>Generification of the public API type</p>
</td>
<td class="cellalignment31" headers="r5c1-t3 r1c3-t3">
<p>None</p>
</td>
<td class="cellalignment31" headers="r5c1-t3 r1c4-t3">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref28"></a>
<h3 class="sect2"><span class="secnum">C.1.2</span> Interfaces and Annotation Types</h3>
<p>The rules in this group apply to interfaces and annotation types.</p>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref29"></a><a id="sthref30"></a>Table C-2 API Migration Compatibility Rules - Interfaces and Annotation Types</p>
<table class="cellalignment36" title="API Migration Compatibility Rules - Interfaces and Annotation Types" summary="Add Summary attribute value here." dir="ltr">
<thead>
<tr class="cellalignment25">
<th class="cellalignment37" id="r1c1-t4">Rule #</th>
<th class="cellalignment37" id="r1c2-t4">Description</th>
<th class="cellalignment37" id="r1c3-t4">Breaks</th>
<th class="cellalignment37" id="r1c4-t4">Severity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment25">
<td class="cellalignment31" id="r2c1-t4" headers="r1c1-t4">
<p>2.1</p>
</td>
<td class="cellalignment31" headers="r2c1-t4 r1c2-t4">
<p>Add abstract methods</p>
</td>
<td class="cellalignment31" headers="r2c1-t4 r1c3-t4">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r2c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r3c1-t4" headers="r1c1-t4">
<p>2.2</p>
</td>
<td class="cellalignment31" headers="r3c1-t4 r1c2-t4">
<p>Add fields</p>
</td>
<td class="cellalignment31" headers="r3c1-t4 r1c3-t4">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r3c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r4c1-t4" headers="r1c1-t4">
<p>2.3 *</p>
</td>
<td class="cellalignment31" headers="r4c1-t4 r1c2-t4">
<p>Expand the set of superinterfaces (direct or indirect) if the added interface has a field (constant)</p>
</td>
<td class="cellalignment31" headers="r4c1-t4 r1c3-t4">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r4c1-t4 r1c4-t4">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r5c1-t4" headers="r1c1-t4">
<p>2.4</p>
</td>
<td class="cellalignment31" headers="r5c1-t4 r1c2-t4">
<p>Contract superinterface set (direct or inherited)</p>
</td>
<td class="cellalignment31" headers="r5c1-t4 r1c3-t4">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r5c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r6c1-t4" headers="r1c1-t4">
<p>2.5 *</p>
</td>
<td class="cellalignment31" headers="r6c1-t4 r1c2-t4">
<p>Add member without default value to annotation type</p>
</td>
<td class="cellalignment31" headers="r6c1-t4 r1c3-t4">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r6c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r7c1-t4" headers="r1c1-t4">
<p>2.6 *</p>
</td>
<td class="cellalignment31" headers="r7c1-t4 r1c2-t4">
<p>Add member with default value to annotation type</p>
</td>
<td class="cellalignment31" headers="r7c1-t4 r1c3-t4">
<p>None</p>
</td>
<td class="cellalignment31" headers="r7c1-t4 r1c4-t4">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r8c1-t4" headers="r1c1-t4">
<p>2.7</p>
</td>
<td class="cellalignment31" headers="r8c1-t4 r1c2-t4">
<p>Remove member from annotation type</p>
</td>
<td class="cellalignment31" headers="r8c1-t4 r1c3-t4">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r8c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r9c1-t4" headers="r1c1-t4">
<p>2.8</p>
</td>
<td class="cellalignment31" headers="r9c1-t4 r1c2-t4">
<p>Remove default value from member of annotation type</p>
</td>
<td class="cellalignment31" headers="r9c1-t4 r1c3-t4">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r9c1-t4 r1c4-t4">
<p>Severe</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref31"></a>
<h3 class="sect2"><span class="secnum">C.1.3</span> Interfaces and Class Methods</h3>
<p>The rules in this group apply to interfaces and class methods.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Some rules in this group apply only for class methods.</p>
</div>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref32"></a><a id="sthref33"></a>Table C-3 API Migration Compatibility Rules - Interfaces and Class Methods</p>
<table class="cellalignment36" title="API Migration Compatibility Rules - Interfaces and Class Methods" summary="Add Summary attribute value here." dir="ltr">
<thead>
<tr class="cellalignment25">
<th class="cellalignment37" id="r1c1-t6">Rule #</th>
<th class="cellalignment37" id="r1c2-t6">Description</th>
<th class="cellalignment37" id="r1c3-t6">Breaks</th>
<th class="cellalignment37" id="r1c4-t6">Severity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment25">
<td class="cellalignment31" id="r2c1-t6" headers="r1c1-t6">
<p>3.1</p>
</td>
<td class="cellalignment31" headers="r2c1-t6 r1c2-t6">
<p>Change signature and/or return type</p>
</td>
<td class="cellalignment31" headers="r2c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r2c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r3c1-t6" headers="r1c1-t6">
<p>3.2</p>
</td>
<td class="cellalignment31" headers="r3c1-t6 r1c2-t6">
<p>Change last parameter from array type T[] to variable array T...</p>
</td>
<td class="cellalignment31" headers="r3c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r3c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r4c1-t6" headers="r1c1-t6">
<p>3.3</p>
</td>
<td class="cellalignment31" headers="r4c1-t6 r1c2-t6">
<p>Change last parameter from array T... to array type T[]</p>
</td>
<td class="cellalignment31" headers="r4c1-t6 r1c3-t6">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r4c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r5c1-t6" headers="r1c1-t6">
<p>3.4</p>
</td>
<td class="cellalignment31" headers="r5c1-t6 r1c2-t6">
<p>Change normalized throw list</p>
</td>
<td class="cellalignment31" headers="r5c1-t6 r1c3-t6">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r5c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r6c1-t6" headers="r1c1-t6">
<p>3.5</p>
</td>
<td class="cellalignment31" headers="r6c1-t6 r1c2-t6">
<p>Decrease access from public to protected</p>
</td>
<td class="cellalignment31" headers="r6c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r6c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r7c1-t6" headers="r1c1-t6">
<p>3.6 *</p>
</td>
<td class="cellalignment31" headers="r7c1-t6 r1c2-t6">
<p>Increase access from protected to public if the class is subclassable</p>
</td>
<td class="cellalignment31" headers="r7c1-t6 r1c3-t6">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r7c1-t6 r1c4-t6">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r8c1-t6" headers="r1c1-t6">
<p>3.7</p>
</td>
<td class="cellalignment31" headers="r8c1-t6 r1c2-t6">
<p>Change method from abstract to non-abstract</p>
</td>
<td class="cellalignment31" headers="r8c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r8c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r9c1-t6" headers="r1c1-t6">
<p>3.8</p>
</td>
<td class="cellalignment31" headers="r9c1-t6 r1c2-t6">
<p>Change method from non-abstract to abstract (if the class can be subclassed)</p>
</td>
<td class="cellalignment31" headers="r9c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r9c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r10c1-t6" headers="r1c1-t6">
<p>3.9</p>
</td>
<td class="cellalignment31" headers="r10c1-t6 r1c2-t6">
<p>Change method from final to non-final</p>
</td>
<td class="cellalignment31" headers="r10c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r10c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r11c1-t6" headers="r1c1-t6">
<p>3.10</p>
</td>
<td class="cellalignment31" headers="r11c1-t6 r1c2-t6">
<p>Change method from non-final to final</p>
</td>
<td class="cellalignment31" headers="r11c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r11c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r12c1-t6" headers="r1c1-t6">
<p>3.11</p>
</td>
<td class="cellalignment31" headers="r12c1-t6 r1c2-t6">
<p>Change method from static to non-static</p>
</td>
<td class="cellalignment31" headers="r12c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r12c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r13c1-t6" headers="r1c1-t6">
<p>3.12</p>
</td>
<td class="cellalignment31" headers="r13c1-t6 r1c2-t6">
<p>Change method from non-static to static</p>
</td>
<td class="cellalignment31" headers="r13c1-t6 r1c3-t6">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r13c1-t6 r1c4-t6">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r14c1-t6" headers="r1c1-t6">
<p>3.13</p>
</td>
<td class="cellalignment31" headers="r14c1-t6 r1c2-t6">
<p>Change method from native to non-native</p>
</td>
<td class="cellalignment31" headers="r14c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r14c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r15c1-t6" headers="r1c1-t6">
<p>3.14</p>
</td>
<td class="cellalignment31" headers="r15c1-t6 r1c2-t6">
<p>Change method from non-native to native</p>
</td>
<td class="cellalignment31" headers="r15c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r15c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r16c1-t6" headers="r1c1-t6">
<p>3.15</p>
</td>
<td class="cellalignment31" headers="r16c1-t6 r1c2-t6">
<p>Change method from synchronized to non-synchronized</p>
</td>
<td class="cellalignment31" headers="r16c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r16c1-t6 r1c4-t6">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r17c1-t6" headers="r1c1-t6">
<p>3.16</p>
</td>
<td class="cellalignment31" headers="r17c1-t6 r1c2-t6">
<p>Change method from non-synchronized to synchronized</p>
</td>
<td class="cellalignment31" headers="r17c1-t6 r1c3-t6">
<p>None</p>
</td>
<td class="cellalignment31" headers="r17c1-t6 r1c4-t6">&nbsp;</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref34"></a>
<h3 class="sect2"><span class="secnum">C.1.4</span> Interfaces and Class Fields</h3>
<p>The rules in this group apply to interfaces and class methods.</p>
<div class="infobox-note">
<p class="notep1">Note:</p>
<p>Some rules from this group apply only for class fields</p>
</div>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref35"></a><a id="sthref36"></a>Table C-4 API Migration Compatibility Rules - Interfaces and Class Fields</p>
<table class="cellalignment36" title="API Migration Compatibility Rules - Interfaces and Class Fields" summary="Add Summary attribute value here." dir="ltr">
<thead>
<tr class="cellalignment25">
<th class="cellalignment37" id="r1c1-t8">Rule #</th>
<th class="cellalignment37" id="r1c2-t8">Description</th>
<th class="cellalignment37" id="r1c3-t8">Breaks</th>
<th class="cellalignment37" id="r1c4-t8">Severity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment25">
<td class="cellalignment31" id="r2c1-t8" headers="r1c1-t8">
<p>4.1</p>
</td>
<td class="cellalignment31" headers="r2c1-t8 r1c2-t8">
<p>Change type</p>
</td>
<td class="cellalignment31" headers="r2c1-t8 r1c3-t8">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r2c1-t8 r1c4-t8">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r3c1-t8" headers="r1c1-t8">
<p>4.2</p>
</td>
<td class="cellalignment31" headers="r3c1-t8 r1c2-t8">
<p>Change/Remove constant value</p>
</td>
<td class="cellalignment31" headers="r3c1-t8 r1c3-t8">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r3c1-t8 r1c4-t8">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r4c1-t8" headers="r1c1-t8">
<p>4.3</p>
</td>
<td class="cellalignment31" headers="r4c1-t8 r1c2-t8">
<p>Decrease access</p>
</td>
<td class="cellalignment31" headers="r4c1-t8 r1c3-t8">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r4c1-t8 r1c4-t8">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r5c1-t8" headers="r1c1-t8">
<p>4.4</p>
</td>
<td class="cellalignment31" headers="r5c1-t8 r1c2-t8">
<p>Increase access</p>
</td>
<td class="cellalignment31" headers="r5c1-t8 r1c3-t8">
<p>None</p>
</td>
<td class="cellalignment31" headers="r5c1-t8 r1c4-t8">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r6c1-t8" headers="r1c1-t8">
<p>4.5</p>
</td>
<td class="cellalignment31" headers="r6c1-t8 r1c2-t8">
<p>Change from final to non-final</p>
</td>
<td class="cellalignment31" headers="r6c1-t8 r1c3-t8">
<p>None</p>
</td>
<td class="cellalignment31" headers="r6c1-t8 r1c4-t8">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r7c1-t8" headers="r1c1-t8">
<p>4.6</p>
</td>
<td class="cellalignment31" headers="r7c1-t8 r1c2-t8">
<p>Change from non-final to final</p>
</td>
<td class="cellalignment31" headers="r7c1-t8 r1c3-t8">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r7c1-t8 r1c4-t8">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r8c1-t8" headers="r1c1-t8">
<p>4.7</p>
</td>
<td class="cellalignment31" headers="r8c1-t8 r1c2-t8">
<p>Change from static to non-static</p>
</td>
<td class="cellalignment31" headers="r8c1-t8 r1c3-t8">
<p>Bone</p>
</td>
<td class="cellalignment31" headers="r8c1-t8 r1c4-t8">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r9c1-t8" headers="r1c1-t8">
<p>4.8</p>
</td>
<td class="cellalignment31" headers="r9c1-t8 r1c2-t8">
<p>Change from non-static to static</p>
</td>
<td class="cellalignment31" headers="r9c1-t8 r1c3-t8">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r9c1-t8 r1c4-t8">
<p>Severe</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" -->
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref37"></a>
<h3 class="sect2"><span class="secnum">C.1.5</span> Classes</h3>
<p>The rules in this group apply to classes.</p>
<div class="tblhruleformalwide">
<p class="titleintable"><a id="sthref38"></a><a id="sthref39"></a>Table C-5 API Migration Compatibility Rules - General</p>
<table class="cellalignment36" title="API Migration Compatibility Rules - General" summary="Add Summary attribute value here." dir="ltr">
<thead>
<tr class="cellalignment25">
<th class="cellalignment37" id="r1c1-t9">Rule #</th>
<th class="cellalignment37" id="r1c2-t9">Description</th>
<th class="cellalignment37" id="r1c3-t9">Breaks</th>
<th class="cellalignment37" id="r1c4-t9">Severity</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment25">
<td class="cellalignment31" id="r2c1-t9" headers="r1c1-t9">
<p>5.1 *</p>
</td>
<td class="cellalignment31" headers="r2c1-t9 r1c2-t9">
<p>Add non-abstract and non-static methods</p>
</td>
<td class="cellalignment31" headers="r2c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r2c1-t9 r1c4-t9">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r3c1-t9" headers="r1c1-t9">
<p>5.2</p>
</td>
<td class="cellalignment31" headers="r3c1-t9 r1c2-t9">
<p>Add abstract methods (if the class can be subclassed)</p>
</td>
<td class="cellalignment31" headers="r3c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r3c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r4c1-t9" headers="r1c1-t9">
<p>5.3</p>
</td>
<td class="cellalignment31" headers="r4c1-t9 r1c2-t9">
<p>Add static methods (if the class can be subclassed)</p>
</td>
<td class="cellalignment31" headers="r4c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r4c1-t9 r1c4-t9">
<p>Warning</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r5c1-t9" headers="r1c1-t9">
<p>5.4</p>
</td>
<td class="cellalignment31" headers="r5c1-t9 r1c2-t9">
<p>Remove constructors</p>
</td>
<td class="cellalignment31" headers="r5c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r5c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r6c1-t9" headers="r1c1-t9">
<p>5.5</p>
</td>
<td class="cellalignment31" headers="r6c1-t9 r1c2-t9">
<p>Add first constructor with arguments or throws clause</p>
</td>
<td class="cellalignment31" headers="r6c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r6c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r7c1-t9" headers="r1c1-t9">
<p>5.6</p>
</td>
<td class="cellalignment31" headers="r7c1-t9 r1c2-t9">
<p>Add fields</p>
</td>
<td class="cellalignment31" headers="r7c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r7c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r8c1-t9" headers="r1c1-t9">
<p>5.7</p>
</td>
<td class="cellalignment31" headers="r8c1-t9 r1c2-t9">
<p>Expand implemented interface set (direct or indirect)</p>
</td>
<td class="cellalignment31" headers="r8c1-t9 r1c3-t9">&nbsp;</td>
<td class="cellalignment31" headers="r8c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r9c1-t9" headers="r1c1-t9">
<p>5.7.1</p>
</td>
<td class="cellalignment31" headers="r9c1-t9 r1c2-t9">
<p>The added interface adds abstract methods</p>
</td>
<td class="cellalignment31" headers="r9c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r9c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r10c1-t9" headers="r1c1-t9">
<p>5.7.2</p>
</td>
<td class="cellalignment31" headers="r10c1-t9 r1c2-t9">
<p>The new interface adds fields or inner classes</p>
</td>
<td class="cellalignment31" headers="r10c1-t9 r1c3-t9">
<p>Source</p>
</td>
<td class="cellalignment31" headers="r10c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r11c1-t9" headers="r1c1-t9">
<p>5.7.3</p>
</td>
<td class="cellalignment31" headers="r11c1-t9 r1c2-t9">
<p>If 5.7.1 and 5.7.3 are not true</p>
</td>
<td class="cellalignment31" headers="r11c1-t9 r1c3-t9">
<p>None</p>
</td>
<td class="cellalignment31" headers="r11c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r12c1-t9" headers="r1c1-t9">
<p>5.8</p>
</td>
<td class="cellalignment31" headers="r12c1-t9 r1c2-t9">
<p>Contract implemented interface set (direct or indirect)</p>
</td>
<td class="cellalignment31" headers="r12c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r12c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r13c1-t9" headers="r1c1-t9">
<p>5.9</p>
</td>
<td class="cellalignment31" headers="r13c1-t9 r1c2-t9">
<p>Expand superclass set (direct or indirect)</p>
</td>
<td class="cellalignment31" headers="r13c1-t9 r1c3-t9">&nbsp;</td>
<td class="cellalignment31" headers="r13c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r14c1-t9" headers="r1c1-t9">
<p>5.9.1</p>
</td>
<td class="cellalignment31" headers="r14c1-t9 r1c2-t9">
<p>Add superclass adds abstract method (see rules 5.1 - 5.3)</p>
</td>
<td class="cellalignment31" headers="r14c1-t9 r1c3-t9">&nbsp;</td>
<td class="cellalignment31" headers="r14c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r15c1-t9" headers="r1c1-t9">
<p>5.9.2</p>
</td>
<td class="cellalignment31" headers="r15c1-t9 r1c2-t9">
<p>Add superclass adds field (see rule 5.6)</p>
</td>
<td class="cellalignment31" headers="r15c1-t9 r1c3-t9">&nbsp;</td>
<td class="cellalignment31" headers="r15c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r16c1-t9" headers="r1c1-t9">
<p>5.9.3</p>
</td>
<td class="cellalignment31" headers="r16c1-t9 r1c2-t9">
<p>Other cases</p>
</td>
<td class="cellalignment31" headers="r16c1-t9 r1c3-t9">&nbsp;</td>
<td class="cellalignment31" headers="r16c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r17c1-t9" headers="r1c1-t9">
<p>5.10</p>
</td>
<td class="cellalignment31" headers="r17c1-t9 r1c2-t9">
<p>Contract superclass set (direct or indirect)</p>
</td>
<td class="cellalignment31" headers="r17c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r17c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r18c1-t9" headers="r1c1-t9">
<p>5.11</p>
</td>
<td class="cellalignment31" headers="r18c1-t9 r1c2-t9">
<p>Change abstract to non-abstract</p>
</td>
<td class="cellalignment31" headers="r18c1-t9 r1c3-t9">
<p>None</p>
</td>
<td class="cellalignment31" headers="r18c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r19c1-t9" headers="r1c1-t9">
<p>5.12</p>
</td>
<td class="cellalignment31" headers="r19c1-t9 r1c2-t9">
<p>Change non-abstract to abstract (if the class can be subclassed)</p>
</td>
<td class="cellalignment31" headers="r19c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r19c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r20c1-t9" headers="r1c1-t9">
<p>5.13</p>
</td>
<td class="cellalignment31" headers="r20c1-t9 r1c2-t9">
<p>Change final to non-final</p>
</td>
<td class="cellalignment31" headers="r20c1-t9 r1c3-t9">
<p>None</p>
</td>
<td class="cellalignment31" headers="r20c1-t9 r1c4-t9">&nbsp;</td>
</tr>
<tr class="cellalignment25">
<td class="cellalignment31" id="r21c1-t9" headers="r1c1-t9">
<p>5.14</p>
</td>
<td class="cellalignment31" headers="r21c1-t9 r1c2-t9">
<p>Change non-final to final</p>
</td>
<td class="cellalignment31" headers="r21c1-t9 r1c3-t9">
<p>Both</p>
</td>
<td class="cellalignment31" headers="r21c1-t9 r1c4-t9">
<p>Severe</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformalwide" --></div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="Z4000c521043429"></a>
<div class="sect1">
<h2 class="sect1"><span class="secnum">C.2</span> Comments and Clarifications</h2>
<p>The following sections contain comments and clarifications that make the rules more clear.</p>
<a id="Z4000c521043371"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.1</span> Rule 1.1</h3>
<p>Adding a class can theoretically break source code compatibility because new classes can be incorrectly resolved in an existing client's code with type-import-on-demand declarations (also know as wildcard imports). This can happen if the code uses another type with the same simple name. For example:</p>
<pre>
//client's code

import com.acme.*;
import com.client.*;

   .....

   Policy p = new Policy();   // this is com.client.Policy

   .....
</pre>
<p>In this case, after adding class <code>com.acme.Policy</code>, the compiler raises the error</p>
<pre>
reference to Policy is ambiguous, both class com.acme.Policy in com.acme and class com.client.Policy in com.client match.
</pre>
<p>This rule is considered a warning because it will probably not affect binary compatibility and adhering to this rule makes API evolution very difficult.</p>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043377"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.2</span> Rule 1.4</h3>
<p>Generics are a facility of generic programming that was added to the Java programming language as part of Java SE version 5.0. Generics allow a type or method to operate on objects of various types while providing compile-time type safety. Generification upgrades types using support to-be-specified-later types that are instantiated as needed for specific types that are provided as type parameters.</p>
<p>The Java programming language implements generics using erasure, which ensures that legacy and generic versions usually generate identical class files, except for some auxiliary information about types. Binary compatibility is not broken because it is possible to replace a legacy class file with a generic class file without changing or recompiling any client code.</p>
<p>To facilitate interfacing with non-generic legacy code, it is also possible to use the erasure of a parameterized type as a type. Such a type is called a raw type (<span class="italic">Java Language Specification</span> 3/4.8). Allowing the raw type also ensures backward compatibility for source code.</p>
<p>According to this, the following versions of the <code>java.util.Iterator</code> class are both binary and source code backward compatible:</p>
<ul>
<li>
<p>Class <code>java.util.Iterator</code> as it is defined in Java SE version 1.4:</p>
<pre>
public interface Iterator {
    boolean hasNext();
    Object next();
    void remove();
}
</pre></li>
<li>
<p>Class <code>java.util.Iterator</code> as it is defined in Java SE version 5.0:</p>
<pre>
public interface Iterator&lt;E&gt; {
    boolean hasNext();
    E next();
    void remove();
}
</pre></li>
</ul>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043389"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.3</span> Rule 2.3</h3>
<p>Adding a superinterface with a constant field can shadow another entity with the same simple name. Consider the following code:</p>
<pre>
public interface Poet{
    boolean LITERATE = true;
}

public interface Playwright{
    boolean LITERATE = true;
}

public interface Shakespeare extends Poet {

}
</pre>
<p>Suppose that a new version of the Shakespeare interface implements interface Playwright as well as Poet as shown here:</p>
<pre>
public interface Shakespeare extends Poet, Playwright {

}
</pre>
<p>The following client code will not compile because the reference to <code>LITERATE</code> is ambiguous.</p>
<pre>
// client code 
public class ShakespeareImpl implements Shakespeare {
    void introduce() {
        System.out.println("Hi, my name is Shakespeare and I'm " + LITERATE ?
                "quite literate" : "rather illiterate" );}
}
</pre></div>
<!-- class="sect2" -->
<a id="Z4000c521043395"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.4</span> Rules 2.5, 2.6</h3>
<p>The example below shows how adding a member without a default value to an annotation type breaks source code compatibility.</p>
<pre>
// annotation type v1
@interface Agent{
   String name();
}

// client's code which uses this annotation type v1
@Agent(name="James Bond")  


// annotation type v2.1
@interface Agent{
   String name();
   String id(); // added member
}

// legacy code is not compilable due to 
// error - annotation Agent is missing id
@Agent(name="James Bond")


// annotation type v2.2
@interface Agent{
   String name();
   String id() default "007";  // added member with default value
}

// legacy code is compilable
@Agent(name="James Bond") 
</pre></div>
<!-- class="sect2" -->
<a id="Z4000c521043399"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.5</span> Rule 3.6</h3>
<p>Changing a method from protected to public can break source code compatibility if this method was overridden as protected. In this case the legacy code can not be recompiled because &rdquo;access narrowing&rdquo; is prohibited in the Java programming language. This rule is only a warning because it does not affect binary compatibility, and the probability of its affecting source code compatibility is very low.</p>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043403"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.6</span> Rule 4.2</h3>
<p>Changing or removing constant values can break source code compatibility. For example, consider the following client code example. An integer constant named <code>NOTHING</code> with a value of 0 is used:</p>
<pre>
switch (i) {
    case NOTHING:
        // some actions
    case -1:
        // some other actions
}
</pre>
<p>Assume that the value of the constant <code>NOTHING</code> is changed from 0 to -1. The client code will not compile because of the duplicate case label. This rule is only a warning because it does not affect binary compatibility, and the probability of its affecting source code compatibility is very low.</p>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043411"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.7</span> Rule 5.1</h3>
<p>Adding a regular method to a subclassable class can break source code and binary compatibility because a subclass can have a method with the same signature but with weaker access privileges. For example consider the following code example:</p>
<pre>
class ClientClass extends APIClass {
    private void foo() {}
}
</pre>
<p>Assume that the class <code>APIClass</code> is changed, and the method</p>
<pre>
protected void foo() {}
</pre>
<p>is added. The code cannot be recompiled due of an error that generates the following error message:</p>
<pre>
foo() in ClientClass cannot override foo() in APIClass; attempting to assign weaker access privileges; was protected
</pre>
<p>Binary compatibility is broken as defined in JLS 3/3.14.12</p>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043419"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.8</span> Rule 5.3</h3>
<p>Adding a static method to a subclassable class can break source code and binary compatibility, because a subclass can have a method with the same signature. For example consider the following code example:</p>
<pre>
class ClientClass extends APIClass {
    protected void foo() {}
}
</pre>
<p>Suppose that the class <code>APIClass</code> is changed and the method</p>
<pre>
  protected static void foo() {}
</pre>
<p>is added. The code can not be recompiled due to an error that generates the following error message:</p>
<pre>
foo() in ClientClass cannot override foo() in APIClass; overridden method is static
</pre>
<p>Binary compatibility is be broken as defined in JLS 3/3.14.12</p>
</div>
<!-- class="sect2" -->
<a id="Z4000c521043425"></a>
<div class="sect2">
<h3 class="sect2"><span class="secnum">C.2.9</span> Rule 5.7.2</h3>
<p>As in the case of rule 2.3, adding a superinterface with a constant field can shadow another entity with the same simple name.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment24">
<tr>
<td class="cellalignment31">
<table class="cellalignment29">
<tr>
<td class="cellalignment28"><a href="a_api_examples.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment28"><a href="a_merge.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2006, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment33">
<table class="cellalignment27">
<tr>
<td class="cellalignment28"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment28"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment28"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
