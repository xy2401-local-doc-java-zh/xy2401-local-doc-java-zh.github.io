<!DOCTYPE html>
<html lang="en" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<title>About Java Flight Recorder</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Merged Version 1044" />
<meta name="description" content="Describes the Java Flight Recorder runtime implementation and instructions for using the tool." />
<meta name="dcterms.created" content="2015-02-23T12:12:36Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java Platform, Standard Edition Java Flight Recorder Runtime Guide" />
<meta name="dcterms.identifier" content="E28976-04" />
<meta name="dcterms.isVersionOf" content="JFRRT" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="../../index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../../nav/js/doccd.js"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="preface_jfrrt.htm" title="Previous" type="text/html" />
<link rel="Next" href="run.htm" title="Next" type="text/html" />
<link rel="alternate" href="JFRRT.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../../dcommon/css/fonts.css">
<link rel="stylesheet" href="../../dcommon/css/foundation.css">
<link rel="stylesheet" href="../../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../../nav/css/html5.css">
<link rel="stylesheet" href="../../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<span id="PAGE" style="display:none;">4/6</span> <!-- End Header -->
<div id="JFRRT107" class="chapter"><a id="sthref7"></a>
<h1 class="chapter"><span class="secnum">1</span> About Java Flight Recorder</h1>
<div class="infobox-note">
<p class="notep1">Note:</p>
Java Flight Recorder requires a commercial license for use in production. To learn more about commercial features and how to enable them please visit <code dir="ltr"><a href="http://www.oracle.com/technetwork/java/javaseproducts/">http://www.oracle.com/technetwork/java/javaseproducts/</a></code>.</div>
<p>Java Flight Recorder (JFR) is a tool for collecting, diagnosing, and profiling data about a running Java application. It is integrated into the Java Virtual Machine (JVM) and causes almost no performance overhead, so it can be used even in heavily loaded production environments. When default settings are used, performance impact is less than one percent. For some applications, it can be significantly lower. However, for short-running applications (which are not the kind of applications running in production environments), relative startup and warmup times can be larger, which might impact the performance by more than one percent. JFR collects data about the JVM as well as the Java application running on it.</p>
<p>Compared to other similar tools, JFR has the following benefits:</p>
<ul>
<li>
<p><span class="bold">Provides Better Data:</span> JFR captures data from various parts of the runtime, and significant effort has been made to ensure that the captured data represents the true state of the system. Examples of this effort include minimizing the observer effect, and being able to capture samples outside safe points.</p>
</li>
<li>
<p><span class="bold">Provides a Better Data Model:</span> The data model is self-describing. A recording, no matter the size, contains everything required to understand the data.</p>
</li>
<li>
<p><span class="bold">Provides Better Performance:</span> The flight recorder engine itself is optimized for performance. Care has been taken to ensure that data capture will not undo optimizations or otherwise negatively affect performance. Some data can be obtained practically for free, because it is already captured by the runtime.</p>
</li>
<li>
<p><span class="bold">Allows for Third-Party Event Providers:</span> A set of APIs make it possible for JFR to capture data from third-party applications, including WebLogic Server and other Oracle products.</p>
</li>
<li>
<p><span class="bold">Reduces Total Cost of Ownership:</span> JFR enables you to spend less time diagnosing and troubleshooting problems, reduces operating costs and business interrupts, provides faster resolution time when problems occur, and improves system efficiency.</p>
</li>
</ul>
<p>JFR is primarily used for:</p>
<ul>
<li>
<p><span class="bold">Profiling</span></p>
<p>JFR continuously captures information about the running system. This profiling information includes execution profiling (which shows where the program spends its time), thread stall/latency profiling (which shows why the threads are not running), allocation profiling (which shows where the allocation pressure is), garbage collection details and more.</p>
</li>
<li>
<p><span class="bold">Black Box Analysis</span></p>
<p>JFR continuously saves information to a circular buffer. Because the overhead is so low, the flight recorder can be always on. The information can be accessed later, when looking for the cause of a particular anomaly.</p>
</li>
<li>
<p><span class="bold">Support and Debugging</span></p>
<p>Data collected by JFR can be essential when contacting Oracle support to help diagnose issues with your Java application.</p>
</li>
</ul>
<a id="CHDHAGAF"></a>
<div id="JFRRT108" class="sect1"><!-- infolevel="all" infotype="Concept" -->
<h2 class="sect1"><span class="secnum">1.1</span> Understanding Events</h2>
<p>Java Flight Recorder collects data about <span class="italic">events</span>. Events occur in the JVM or the Java application at a specific point in time. Each event has a name, a time stamp, and an optional <span class="italic">payload</span>. The payload is the data associated with an event, for example, the CPU usage, the Java heap size before and after the event, the thread ID of the lock holder, and so on.</p>
<p>Most events also have information about the thread in which the event occurred, the stack trace at the time of the event, and the duration of the event. Using the information available in events, you can reconstruct the runtime details for the JVM and the Java application.</p>
<p>JFR collects information about four types of events:</p>
<ul>
<li>
<p>An <span class="italic">instant event</span> occurs instantly, and is logged right away.</p>
</li>
<li>
<p>A <span class="italic">duration event</span> has a start and an end time, and is logged when it completes.</p>
</li>
<li>
<p>A <span class="italic">timed event</span> is a duration event that has an optional user defined threshold, so that only events lasting longer than the specified period of time are recorded. This is not possible for other types of events.</p>
</li>
<li>
<p>A <span class="italic">sample event</span> (also called requestable event) is logged at a regular interval to provide a sample of system activity. You can configure how often sampling occurs.</p>
</li>
</ul>
<p>JFR monitors the running system at an extremely high level of detail. This produces an enormous amount of data. To keep the overhead as low as possible, limit the type of recorded events to those you actually need. In most cases, very short duration events are of no interest, so limit the recording to events with a duration exceeding a certain meaningful threshold.</p>
</div>
<!-- class="sect1" -->
<div id="JFRRT109" class="sect1"><!-- infolevel="all" infotype="Concept" --><a id="sthref8"></a>
<h2 class="sect1"><span class="secnum">1.2</span> Understanding Data Flow</h2>
<p>JFR collects data from the JVM (through internal APIs) and from the Java application (through the JFR APIs). This data is stored in small thread-local buffers that are flushed to a global in-memory buffer. Data in the global in-memory buffer is then written to disk. Disk write operations are expensive, so you should try to minimize them by carefully selecting the event data you enable for recording. The format of the binary recording files is very compact and efficient for applications to read and write.</p>
<p>There is no information overlap between the various buffers. A particular chunk of data is available either in memory or on disk, but never in both places. This has the following implications:</p>
<ul>
<li>
<p>Data not yet flushed to a disk buffer will not be available in the event of a power failure.</p>
</li>
<li>
<p>A JVM crash can result in some data being available in the core file (that is, the in-memory buffer) and some in the disk buffer. JFR does not provide the capability to merge such buffers.</p>
</li>
<li>
<p>There may be a small delay before data collected by JFR is available to you (for example, when it has to be moved to a different buffer before it can be made visible).</p>
</li>
<li>
<p>The data in the recording file may not be in time sequential order as the data is collected in chunks from several thread buffers.</p>
</li>
</ul>
<p>In some cases, the JVM drops the event order to ensure that it does not crash. Any data that cannot be written fast enough to disk is discarded. When this happens, the recording file will include information on which time period was affected. This information will also be logged to the logging facility of the JVM.</p>
<p>You can configure JFR to not write any data to disk. In this mode, the global buffer acts as a circular buffer and the oldest data is dropped when the buffer is full. This very low-overhead operating mode still collects all the vital data necessary for root-cause problem analysis. Because the most recent data is always available in the global buffer, it can be written to disk on demand whenever operations or surveillance systems detect a problem. However, in this mode, only the last few minutes of data is available, so it only contains the most recent events. If you need to get the full history of operation for a long period of time, use the default mode where events are written to disk regularly.</p>
</div>
<!-- class="sect1" -->
<div id="JFRRT110" class="sect1"><!-- infolevel="all" infotype="Concept" --><a id="sthref9"></a>
<h2 class="sect1"><span class="secnum">1.3</span> Java Flight Recorder Architecture</h2>
<p>JFR is comprised of the following components:</p>
<ul>
<li>
<p><span class="italic">JFR runtime</span> is the recording engine inside the JVM that produces the recordings. The runtime engine itself is comprised of the following components:</p>
<ul>
<li>
<p>The <span class="italic">agent</span> controls buffers, disk I/O, MBeans, and so on. This component provides a dynamic library written in C and Java code, and also provides a JVM-independent pure Java implementation.</p>
</li>
<li>
<p>The <span class="italic">producers</span> insert data into the buffers. They can collect events from the JVM and the Java application, and (through a Java API) from third-party applications.</p>
</li>
</ul>
</li>
<li>
<p><span class="italic">Flight Recorder plugin</span> for Java Mission Control (JMC) enables you to work with JFR from the JMC client, using a graphical user interface (GUI) to start, stop, and configure recordings, as well as view recording files.</p>
</li>
</ul>
</div>
<!-- class="sect1" -->
<a id="CHDHFFGE"></a>
<div id="JFRRT111" class="sect1"><!-- infolevel="all" infotype="Tutorial" -->
<h2 class="sect1"><span class="secnum">1.4</span> Enabling Java Flight Recorder</h2>
<p>By default, JFR is disabled in the JVM. To enable JFR, you must launch your Java application with the <code dir="ltr">-XX:+FlightRecorder</code> option. Because JFR is a commercial feature, available only in the commercial packages based on Java Platform, Standard Edition (<span class="italic">Oracle Java SE Advanced</span> and <span class="italic">Oracle Java SE Suite</span>), you also have to enable commercial features using the <code dir="ltr">-XX:+UnlockCommercialFeatures</code> options.</p>
<p>For example, to enable JFR when launching a Java application named <code dir="ltr">MyApp</code>, use the following command:</p>
<pre dir="ltr">
java -XX:+UnlockCommercialFeatures -XX:+FlightRecorder MyApp
</pre>
<p>Alternatively, (if using JDK 8u40 or later) you can enable JFR at runtime from within JMC itself. When you start a new Flight Recording, a dialog box will appear stating that:</p>
<pre dir="ltr">
Commercial Features are not enabled in the JVM. To start a Flight Recording, you need to enable Commercial Features. Do you want to do that now?
</pre>
<p>Click "Yes" to enable these features.</p>
<p>You can also enable Java Flight Recorder in a running JVM by using the appropriate <code dir="ltr">jcmd</code> diagnostic commands. For examples, see <a href="run.htm#A1118227">Section 2.2, "Using Diagnostic Commands"</a>.</p>
<p>Note that when running alternative languages relying on lambda forms on the JVM -- such as the JavaScript implementation Nashorn -- the depths of the stack traces can get quite deep. To ensure that stack traces with large stacks are sampled properly, you may need to increase the Flight Recorder stack depth. Setting its value to 1024 will usually be enough:</p>
<pre dir="ltr">
java -XX:+UnlockCommercialFeatures -XX:+FlightRecorder -XX:FlightRecorderOptions=stackdepth=1024 MyApp
</pre>
<div id="JFRRT112" class="sect2"><!-- infolevel="all" infotype="Tutorial" --><a id="sthref10"></a>
<h3 class="sect2"><span class="secnum">1.4.1</span> Improving the Fidelity of the JFR Method Profiler</h3>
<p>One nice property of the JFR method profiler is that it does not require threads to be at safe points in order for stacks to be sampled. However, since the common case is that stacks will only be walked at safe points, HotSpot normally does not provide metadata for non-safe point parts of the code, which means that such samples will not be properly resolved to the correct line number and BCI. That is, unless you specify:</p>
<pre dir="ltr">
-XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints
</pre>
<p>With <code dir="ltr">DebugNonSafepoints</code>, the compiler will generate the necessary metadata for the parts of the code not at safe points as well.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" --></div>
<!-- class="chapter" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment95">
<tr>
<td class="cellalignment102">
<table class="cellalignment100">
<tr>
<td class="cellalignment99"><a href="preface_jfrrt.htm"><img width="24" height="24" src="../../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment99"><a href="run.htm"><img width="24" height="24" src="../../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2001, 2015,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment104">
<table class="cellalignment98">
<tr>
<td class="cellalignment99"><a href="../../index.html"><img width="24" height="24" src="../../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment99"><a href="toc.htm"><img width="24" height="24" src="../../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment99"><a href="../../dcommon/html/feedback.htm"><img width="24" height="24" src="../../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
