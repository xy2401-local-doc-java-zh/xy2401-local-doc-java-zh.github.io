<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=us-ascii" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<meta http-equiv="Content-Script-Type" content="text/javascript" />
<title>The TestSuite Object</title>
<meta name="generator" content="Oracle DARB XHTML Converter (Mode = document) - Version 1.0.24" />
<meta name="date" content="2014-08-01T11:38:1Z" />
<meta name="robots" content="noarchive" />
<meta name="doctitle" content="The TestSuite Object" />
<meta name="relnum" content="JavaTest Harness 4.6" />
<meta name="partnum" content="E20663-04" />
<link rel="copyright" href="../../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />
<link rel="stylesheet" href="../../dcommon/css/blafdoc.css" title="Oracle BLAFDoc" type="text/css" />
<link rel="contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="glossary" href="glossary.htm" title="Glossary" type="text/html" />
<link rel="index" href="index.htm" title="Index" type="text/html" />
<link rel="prev" href="compile.htm" title="Previous" type="text/html" />
<link rel="next" href="finder.htm" title="Next" type="text/html" />
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<div class="header"><a id="top" name="top"></a>
<div class="zz-skip-header"><a href="#BEGIN">Skip Headers</a></div>
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<tr>
<td align="left" valign="top"><b>JavaTest Harness Architect's Guide,</b><br />
<b>JavaTest Harness 4.6 for the Java Platform</b><br />
E20663-04</td>
<td valign="bottom" align="right">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="225">
<tr>
<td>&nbsp;</td>
<td align="center" valign="top"><a href="toc.htm"><img src="../../dcommon/gifs/toc.gif" alt="Go To Table Of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img src="../../dcommon/gifs/index.gif" alt="Go To Index" /><br />
<span class="icon">Index</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100">
<tr>
<td align="center"><a href="compile.htm"><img src="../../dcommon/gifs/leftnav.gif" alt="Previous" /><br />
<span class="icon">Previous</span></a>&nbsp;</td>
<td align="center"><a href="finder.htm"><img src="../../dcommon/gifs/rightnav.gif" alt="Next" /><br />
<span class="icon">Next</span></a></td>
<td>&nbsp;</td>
</tr>
</table>
<a name="BEGIN" id="BEGIN"></a></div>
<!-- class="header" -->
<div class="ind"><!-- End Header --><a id="BBJJGDAD" name="BBJJGDAD"></a>
<h1 class="chapter"><span class="secnum">8</span> The TestSuite Object</h1>
<p>The JavaTest harness uses the <code>TestSuite</code> object as a portal to information about the test suite; whenever the JavaTest harness requires information about the test suite, it queries the <code>TestSuite</code> object. JavaTest reads the <code>testsuite.jtt</code> file to determine the class name and class path for the test suite; JavaTest then uses those properties to instantiate the <code>TestSuite</code> object. By default, the <code>TestSuite</code> object also gets a number of other standard properties from the <code>testsuite.jtt</code> file. As test suite architect, you create and maintain your <code>TestSuite</code> class and the <code>testsuite.jtt</code> file.</p>
<a id="Z40036421005407" name="Z40036421005407"></a>
<div class="sect1">
<h2 class="sect1">The testsuite.jtt File</h2>
<p><a id="sthref240" name="sthref240"></a><a id="sthref241" name="sthref241"></a><a id="sthref242" name="sthref242"></a>The <code>testsuite.jtt</code> file is located in the top-level directory of the test suite and is a registry of information about the test suite that includes the paths to various JavaTest components as well as other static information about the test suite. The <code>testsuite.jtt</code> file generally contains at least two entries that tell the JavaTest harness how to start the <code>TestSuite</code> class:</p>
<ul>
<li>
<p>A <code>testsuite</code> entry that specifies the name of the <code>TestSuite</code> class and any arguments the class requires</p>
</li>
<li>
<p>A <code>classpath</code> entry that specifies the class path on which the main <code>TestSuite</code> class can be found (typically, a JAR file that contains test suite-specific components). This entry is required if the <code>TestSuite</code> class or any other classes the <code>TestSuite</code> refers to are not located within <code>javatest.jar</code>.</p>
</li>
</ul>
<p>The <code>testsuite.jtt</code> file usually contains other entries that specify information about the test suite; the JavaTest harness reads the file and passes the information to the <code>TestSuite</code> class when it starts. <a href="#Z40036421004036">Table 8-1, "testsuite.jtt Properties"</a> describes the standard properties used by the <code>TestSuite</code> and may be specified in the <code>testsuite.jtt</code> file:</p>
<div class="tblhruleformal"><a id="sthref243" name="sthref243"></a><a id="Z40036421004036" name="Z40036421004036"></a>
<p class="titleintable">Table 8-1 testsuite.jtt Properties</p>
<table class="HRuleFormal" title="testsuite.jtt Properties" summary="Add Summary attribute value here." dir="ltr" border="1" width="100%" frame="hsides" rules="rows" cellpadding="3" cellspacing="0">
<col width="21%" />
<col width="*" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t2">Property</th>
<th align="left" valign="bottom" id="r1c2-t2">Description</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t2" headers="r1c1-t2">
<p><a id="sthref244" name="sthref244"></a><a id="sthref245" name="sthref245"></a><a id="sthref246" name="sthref246"></a><a id="sthref247" name="sthref247"></a>additionalDocs</p>
</td>
<td align="left" headers="r2c1-t2 r1c2-t2">
<p>An optional list of resource names that identify JavaHelp helpsets for documents to be added to the JavaTest Help menu. The content of the helpsets must be provided on the test suite classpath (see <span class="italic">classpath</span> above).</p>
<p>Example: <code>additionalDocs=jck.hs</code> <code>releasenotes.hs</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t2" headers="r1c1-t2">
<p><a id="sthref248" name="sthref248"></a><a id="sthref249" name="sthref249"></a>classpath</p>
</td>
<td align="left" headers="r3c1-t2 r1c2-t2">
<p>Extends the class path beyond <code>javatest.jar</code>. The class path is used to locate JavaTest plug-in classes (script, finder, interview) in JAR files, Zip files, or directories. You must separate entries with white space; relative paths are relative to the test suite root directory. If not given, classes must be located on the main JavaTest class path (not recommended). Always use "<code>/</code>" as the file separator.</p>
<p>Default: Nothing in addition to <code>javatest.jar</code></p>
<p>Example: <code>classpath=lib/jtdemotck.jar</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t2" headers="r1c1-t2">
<p><a id="sthref250" name="sthref250"></a><a id="sthref251" name="sthref251"></a>env.tsRoot</p>
</td>
<td align="left" headers="r4c1-t2 r1c2-t2">
<p>A specialized entry to allow a legacy (prior to JavaTest version 3.0) test suite to override the values of <code>$testSuiteRoot</code> and <code>$testSuiteRootDir</code> that get set in the environment used to run tests. Most test suites should not need to set this property.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t2" headers="r1c1-t2">
<p><a id="sthref252" name="sthref252"></a>finder</p>
</td>
<td align="left" headers="r5c1-t2 r1c2-t2">
<p>The name of the test finder class and arguments (if any). This property is used by the default implementation of <code>TestSuite.createTestFinder</code> to determine the test finder to be used to locate tests. This property should be of the form "<span class="italic">classname</span> <span class="italic">args</span>", where <span class="italic">classname</span> identifies the name of the test finder class itself; any arguments are passed to the test finder's <code>init</code> method.</p>
<p>Example: <code>testsuite=com.sun.javatest.finder.TagTestFinder</code></p>
<p>The default implementation of <code>TestSuite.createTestFinder</code> uses the following logic to determine the test finder:</p>
<ul>
<li>
<p>If a <code>testsuite.jtd</code> file is found in the test suite <code>tests/</code> directory, or in the location specified in the <span class="italic">testsuite.jtd</span> entry of the <code>testsuite.jtt</code> file, the test finder is assumed to be <code>com.sun.javatest.finder.BinaryTestFinder</code> (which reads the <code>testsuite.jtd</code> file)</p>
</li>
<li>
<p>If a <span class="italic">finder</span> entry is found in the <code>testsuite.jtt</code> file, it is used to determine the test finder</p>
</li>
<li>
<p>If neither of the preceding are found, the default is to use <code>com.sun.javatest.lib.HTMLTestFinder</code></p>
</li>
</ul>
<p>See the description of the <span class="italic">testsuite.jtd</span> entry below.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t2" headers="r1c1-t2">
<p><a id="sthref253" name="sthref253"></a>id</p>
</td>
<td align="left" headers="r6c1-t2 r1c2-t2">
<p>A unique identifier composed of letters, digits, underscore, minus, and hyphen used to identify a specific version of a test suite. The JavaTest harness uses this property to ensure that component versions are compatible. By convention, the name is composed of the following parts: <span class="italic">technologyName</span>TCK_<span class="italic">version.</span></p>
<p>Example: <code>id=DemoTCK_tags_1.0</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t2" headers="r1c1-t2">
<p><a id="sthref254" name="sthref254"></a>initial.jtx</p>
</td>
<td align="left" headers="r7c1-t2 r1c2-t2">
<p>The path to the exclude list shipped with the test suite. If the path is relative, it is evaluated relative to test suite root directory. Always use "<code>/</code>" as the file separator. The recommended location for this file is in the test suite <code>lib/</code> directory.</p>
<p>Example: <code>initial.jtx=lib/my_testsuite.jtx</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t2" headers="r1c1-t2">
<p><a id="sthref255" name="sthref255"></a>interview</p>
</td>
<td align="left" headers="r8c1-t2 r1c2-t2">
<p>The name of the interview class and arguments (if any). The default implementation of <code>TestSuite.createInterview</code> uses this property to determine the interview to use to obtain configuration information required to run the tests. The property should be of the form "<span class="italic">classname args</span>", where <span class="italic">classname</span> identifies the name of the interview class itself; any arguments are passed to the interview's <code>init</code> method.</p>
<p>Example: <code>interview=com.sun.demotck.DemoInterview</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t2" headers="r1c1-t2">
<p><a id="sthref256" name="sthref256"></a>keywords</p>
</td>
<td align="left" headers="r9c1-t2 r1c2-t2">
<p>The list of valid keywords for this test suite.</p>
<p>If the entry is present and contains a list of keywords, the keywords are added to the configuration editor keywords combo box.</p>
<p>If the entry is omitted, it is taken to mean "unspecified" &mdash; in which case the user can use the configuration editor to specify keywords, but the configuration editor keywords combo box is disabled.</p>
<p>If the entry is present but empty, it is taken to mean "none" &mdash; in which case the configuration editor does not present the keyword questions and tabs to the user.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t2" headers="r1c1-t2">
<p><a id="sthref257" name="sthref257"></a>latest.jtx</p>
</td>
<td align="left" headers="r10c1-t2 r1c2-t2">
<p>Specifies the location (as a URL) where the latest exclude list can be obtained. The <code>http:</code> and <code>file:</code> protocols are supported; authentication access is not yet supported.</p>
<p>Example: <code>latest.jtx=http://my_company.com/support/exclude</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t2" headers="r1c1-t2">
<p><a id="sthref258" name="sthref258"></a>logo</p>
</td>
<td align="left" headers="r11c1-t2 r1c2-t2">
<p>Specifies the location on the class path of an image to be used as the test suite logo. The path is evaluated relative to the test suite root directory. This logo is displayed in the JavaTest Quick Start wizard.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t2" headers="r1c1-t2">
<p><a id="sthref259" name="sthref259"></a>name</p>
</td>
<td align="left" headers="r12c1-t2 r1c2-t2">
<p>The name of the test suite. This property is a string of up to 80 characters. By convention the name is composed of the following parts:</p>
<p><span class="italic">technology_name</span> TCK <span class="italic">version</span>| Test Suite [(<span class="italic">additional text</span>)]</p>
<p>Example: <code>name=DemoTCK 1.0 Test Suite (Tag Tests)</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t2" headers="r1c1-t2">
<p><a id="sthref260" name="sthref260"></a>script</p>
</td>
<td align="left" headers="r13c1-t2 r1c2-t2">
<p>The name of the test script class and arguments (if any). This property is used by the default implementation of <code>TestSuite.createScript</code> to determine the script to run the tests. The value should be of the form "<span class="italic">classname</span> <span class="italic">args</span>", where <span class="italic">classname</span> identifies the name of the <code>Script</code> class itself; any arguments are passed to the Script's <code>init</code> method.</p>
<p>If this property is not specified, the default implementation of <code>TestSuite.createScript</code> reverts to the behavior defined for the JavaTest harness, version 2. Relying on this behavior is not recommended.</p>
<p>Example: <code>script=com.sun.javatest.lib.StdTestScript</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t2" headers="r1c1-t2">
<p>serviceReader</p>
</td>
<td align="left" headers="r14c1-t2 r1c2-t2">
<p>Enables service management for the test suite. See <a href="customizations.htm#CEHIIBED">Chapter 13</a> for detailed information about the service management feature.</p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t2" headers="r1c1-t2">
<p><a id="sthref261" name="sthref261"></a>testCount</p>
</td>
<td align="left" headers="r15c1-t2 r1c2-t2">
<p>The number of tests in the test suite. This property gives the JavaTest GUI a hint as to how many tests are in the test suite.</p>
<p>Example: <code>testCount=450</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t2" headers="r1c1-t2">
<p><a id="sthref262" name="sthref262"></a>tests</p>
</td>
<td align="left" headers="r16c1-t2 r1c2-t2">
<p>By default, the JavaTest harness looks for test source files and test descriptions in the <code>tests/</code> directory in the test suite root directory. If you locate your test sources and test descriptions in a different directory, you must specify it using this property.</p>
<p>Example: <code>tests=apitests</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t2" headers="r1c1-t2">
<p><a id="sthref263" name="sthref263"></a>testsuite</p>
</td>
<td align="left" headers="r17c1-t2 r1c2-t2">
<p>Optional class name for a custom <code>TestSuite</code> class. The value should be of the form "<span class="italic">classname</span> <span class="italic">args</span>", where <span class="italic">classname</span> identifies the name of the <code>TestSuite</code> class itself; any arguments are passed to the <code>TestSuite</code> <code>init</code> method. The <code>TestSuite</code> class is used to access virtually all information about the test suite. Defaults to <code>com.sun.javatest.TestSuite</code>, which provides default behavior in concert with the <code>testsuite.jtt</code> file.</p>
<p>Default: <code>testsuite=com.sun.javatest.TestSuite</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t2" headers="r1c1-t2">
<p>testsuite.jtd</p>
</td>
<td align="left" headers="r18c1-t2 r1c2-t2">
<p>Can be used to override the default location of the BinaryTestFinder data file.</p>
<p>By default the TestSuite class looks for a file named <code>testsuite.jtd</code> in the directory specified by the "tests" property in <code>testsuite.jtt</code>. To override the default, specify the name and location of the BinaryTestFinder data file relative to the top-level directory of the product (location of the <code>testsuite.jtt</code> file).</p>
<p>Example: <code>testsuite.jtd=tests/testsuite.jtd</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t2" headers="r1c1-t2">
<p>tmcontext</p>
</td>
<td align="left" headers="r19c1-t2 r1c2-t2">
<p>Optional class name for a custom <code>ContextManager</code> class. The value should be of the form <span class="italic">"classname"</span>, where <span class="italic">class name</span> identifies the name of the <code>ContextManager</code> class itself. The Test Manager (ExecTool) will query the test suite for this value as it builds the GUI. Defaults to <code>com.sun.javatest.exec.ContextManager</code>, which provides the default behavior of the harness. See <a href="customizations.htm#CEHIIBED">Chapter 13</a> for more information on customization.</p>
<p>Default: <code>tmcontext=com.sun.javatest.exec.ContextManager</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblhruleformal" -->
<div align="center">
<div class="inftblnote"><br />
<table class="Note oac_no_warn" summary="" border="1" width="80%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<tbody>
<tr>
<td align="left">
<p class="notep1">Note:</p>
<p>The <code>testsuite.jtt</code> file is a Java property file and follows all the standard rules for Java property files defined in <code>java.util.Properties</code>.</p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="inftblnote" --></div>
<p>The following example shows the <code>testsuite.jtt</code> file that is included with the tag example test suite.</p>
<pre xml:space="preserve" class="oac_no_warn">
# Test Suite properties file for DemoTCK test suite with 
# tag-style tests
 
name=DemoTCK 1.0 Test Suite (Tag Tests)
id=DemoTCK_tags_1.0
classpath=lib/jtdemotck.jar
finder=com.sun.javatest.finder.TagTestFinder
script=com.sun.javatest.lib.StdTestScript
interview=com.sun.demotck.DemoTCKParameters
</pre></div>
<!-- class="sect1" -->
<a id="Z40036421005547" name="Z40036421005547"></a>
<div class="sect1">
<h2 class="sect1">Overriding Default Methods</h2>
<p><a id="sthref264" name="sthref264"></a>Although by default these properties are obtained from the <code>testsuite.jtt</code> file, you can override this behavior in your <code>TestSuite</code> class. By overriding the methods that get these properties, you can specify your own properties directly in the <code>TestSuite</code> class and/or manipulate the properties from <code>testsuite.jtt</code> as you wish. This is generally not necessary, but it is an option. Some reasons why you might choose to do this:</p>
<ul>
<li>
<p>To hide or protect some of the properties</p>
</li>
<li>
<p>To determine some of these properties programmatically at runtime</p>
</li>
</ul>
<p>To customize the TestSuite class, you must extend the base <code>com.sun.javatest.TestSuite</code> class. For details about which methods you may choose to override, see the <code>TestSuite</code> API documentation.</p>
</div>
<!-- class="sect1" --></div>
<!-- class="ind" -->
<!-- Start Footer -->
<div class="footer">
<hr />
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100%">
<col width="33%" />
<col width="*" />
<col width="33%" />
<tr>
<td valign="bottom">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="100">
<col width="*" />
<col width="48%" />
<col width="48%" />
<tr>
<td>&nbsp;</td>
<td align="center"><a href="compile.htm"><img src="../../dcommon/gifs/leftnav.gif" alt="Previous" /><br />
<span class="icon">Previous</span></a>&nbsp;</td>
<td align="center"><a href="finder.htm"><img src="../../dcommon/gifs/rightnav.gif" alt="Next" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="copyrightlogo"><img class="copyrightlogo" src="../../dcommon/gifs/oracle.gif" alt="Oracle Logo" /><br />
<span class="copyrightlogo">Copyright&nbsp;&copy;&nbsp;2002, 2014,&nbsp;Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.</span> <a href="../../dcommon/html/cpyr.htm"><br />
<span class="copyrightlogo">Legal Notices</span></a></td>
<td valign="bottom" align="right">
<table class="simple oac_no_warn" summary="" cellspacing="0" cellpadding="0" width="225">
<tr>
<td>&nbsp;</td>
<td align="center" valign="top"><a href="toc.htm"><img src="../../dcommon/gifs/toc.gif" alt="Go To Table Of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td align="center" valign="top"><a href="index.htm"><img src="../../dcommon/gifs/index.gif" alt="Go To Index" /><br />
<span class="icon">Index</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
</div>
<!-- class="footer" -->
</body>
</html>
